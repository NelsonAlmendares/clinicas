----------------------------------------------------------------------
-- (Opcional) Crear usuario/esquema y default tablespace
-- CREATE USER CLINICA_DENTAL IDENTIFIED BY "TuPassword"
--   DEFAULT TABLESPACE USERS TEMPORARY TABLESPACE TEMP QUOTA UNLIMITED ON USERS;
-- GRANT CONNECT, RESOURCE TO CLINICA_DENTAL;
-- ALTER SESSION SET CURRENT_SCHEMA = CLINICA_DENTAL;
----------------------------------------------------------------------

-- === Tablas de apoyo / catálogos ===
CREATE TABLE roles (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre       VARCHAR2(50) NOT NULL,
  descripcion  VARCHAR2(255),
  CONSTRAINT uq_roles_nombre UNIQUE (nombre)
);

CREATE TABLE sucursales (
  id        NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre    VARCHAR2(120) NOT NULL,
  direccion VARCHAR2(255),
  telefono  VARCHAR2(40),
  activo    NUMBER(1) DEFAULT 1 NOT NULL,
  CONSTRAINT ck_sucursales_activo CHECK (activo IN (0,1))
);

CREATE TABLE boxes (
  id          NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sucursal_id NUMBER(19) NOT NULL,
  nombre      VARCHAR2(60) NOT NULL,
  activo      NUMBER(1) DEFAULT 1 NOT NULL,
  CONSTRAINT ck_boxes_activo CHECK (activo IN (0,1)),
  CONSTRAINT fk_boxes_sucursal FOREIGN KEY (sucursal_id) REFERENCES sucursales(id)
);

CREATE TABLE usuarios (
  id            NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  rol_id        NUMBER(19) NOT NULL,
  nombre        VARCHAR2(120) NOT NULL,
  email         VARCHAR2(160),
  colegiado     VARCHAR2(60),
  especialidad  VARCHAR2(120),
  hash_password VARCHAR2(255) NOT NULL,
  activo        NUMBER(1) DEFAULT 1 NOT NULL,
  CONSTRAINT ck_usuarios_activo CHECK (activo IN (0,1)),
  CONSTRAINT uq_usuarios_email UNIQUE (email),
  CONSTRAINT fk_usuarios_rol FOREIGN KEY (rol_id) REFERENCES roles(id)
);

-- === Pacientes y documentación clínica ===
CREATE TABLE pacientes (
  id                  NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  historia            VARCHAR2(40),
  nombres             VARCHAR2(120) NOT NULL,
  apellidos           VARCHAR2(120) NOT NULL,
  fecha_nacimiento    DATE,
  sexo                VARCHAR2(1) DEFAULT 'X',
  dpi_nit             VARCHAR2(40),
  telefono            VARCHAR2(40),
  email               VARCHAR2(160),
  contacto_emergencia VARCHAR2(160),
  alergias            CLOB,
  antecedentes        CLOB,
  medicamentos        CLOB,
  fecha_registro      TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT uq_pacientes_historia UNIQUE (historia),
  CONSTRAINT ck_pacientes_sexo CHECK (sexo IN ('F','M','X'))
);

CREATE TABLE consentimientos (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  paciente_id  NUMBER(19) NOT NULL,
  tipo         VARCHAR2(120) NOT NULL,
  texto        CLOB,
  firmado_por  VARCHAR2(160),
  fecha_firma  TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT fk_consent_paciente FOREIGN KEY (paciente_id) REFERENCES pacientes(id)
);

CREATE TABLE documentos (
  id          NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  paciente_id NUMBER(19) NOT NULL,
  consulta_id NUMBER(19),
  tipo        VARCHAR2(100) NOT NULL,
  filename    VARCHAR2(255),
  mime        VARCHAR2(100),
  url         VARCHAR2(500),
  fecha       TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT fk_docs_paciente FOREIGN KEY (paciente_id) REFERENCES pacientes(id)
  -- Si quieres relacionar a consultas: FK opcional (existe más abajo)
);

-- === Servicios (catálogo de procedimientos) ===
CREATE TABLE servicios (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  codigo       VARCHAR2(40),
  nombre       VARCHAR2(160) NOT NULL,
  duracion_min NUMBER(10) DEFAULT 30 NOT NULL,
  precio       NUMBER(12,2) DEFAULT 0 NOT NULL,
  activo       NUMBER(1) DEFAULT 1 NOT NULL,
  CONSTRAINT uq_servicios_codigo UNIQUE (codigo),
  CONSTRAINT ck_servicios_activo CHECK (activo IN (0,1))
);

-- === Agenda y atención ===
CREATE TABLE citas (
  id              NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  paciente_id     NUMBER(19) NOT NULL,
  profesional_id  NUMBER(19) NOT NULL,
  servicio_id     NUMBER(19),
  box_id          NUMBER(19),
  fecha_hora      TIMESTAMP NOT NULL,
  estado          VARCHAR2(20) DEFAULT 'PROGRAMADA' NOT NULL,
  origen          VARCHAR2(12) DEFAULT 'TEL',
  notas           VARCHAR2(255),
  created_at      TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT fk_cita_paciente  FOREIGN KEY (paciente_id)    REFERENCES pacientes(id),
  CONSTRAINT fk_cita_prof      FOREIGN KEY (profesional_id) REFERENCES usuarios(id),
  CONSTRAINT fk_cita_serv      FOREIGN KEY (servicio_id)    REFERENCES servicios(id),
  CONSTRAINT fk_cita_box       FOREIGN KEY (box_id)         REFERENCES boxes(id),
  CONSTRAINT ck_citas_estado   CHECK (estado IN ('PROGRAMADA','CONFIRMADA','EN_SALA','ATENDIDA','NO_SHOW','CANCELADA')),
  CONSTRAINT ck_citas_origen   CHECK (origen IN ('WEB','TEL','WHATSAPP','PRESENCIAL'))
);

CREATE INDEX ix_citas_prof_fecha ON citas (profesional_id, fecha_hora);
CREATE INDEX ix_citas_paciente   ON citas (paciente_id, fecha_hora);

CREATE TABLE consultas (
  id              NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  cita_id         NUMBER(19),
  paciente_id     NUMBER(19) NOT NULL,
  profesional_id  NUMBER(19) NOT NULL,
  motivo          VARCHAR2(255),
  notas           CLOB,
  inicio          TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  fin             TIMESTAMP,
  CONSTRAINT uq_consultas_cita UNIQUE (cita_id),
  CONSTRAINT fk_consulta_cita FOREIGN KEY (cita_id)        REFERENCES citas(id),
  CONSTRAINT fk_consulta_pac  FOREIGN KEY (paciente_id)    REFERENCES pacientes(id),
  CONSTRAINT fk_consulta_prof FOREIGN KEY (profesional_id) REFERENCES usuarios(id)
);

-- (Ahora sí) FK opcional de documentos.consulta_id hacia consultas.id
ALTER TABLE documentos
  ADD CONSTRAINT fk_docs_consulta FOREIGN KEY (consulta_id) REFERENCES consultas(id);

CREATE INDEX ix_consultas_paciente_fecha ON consultas (paciente_id, inicio);

CREATE TABLE procedimientos (
  id          NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  consulta_id NUMBER(19) NOT NULL,
  servicio_id NUMBER(19) NOT NULL,
  pieza       VARCHAR2(10),
  superficie  VARCHAR2(10),
  tiempo_min  NUMBER(10),
  precio      NUMBER(12,2),
  CONSTRAINT fk_proc_consulta FOREIGN KEY (consulta_id) REFERENCES consultas(id),
  CONSTRAINT fk_proc_serv     FOREIGN KEY (servicio_id)  REFERENCES servicios(id)
);

CREATE TABLE odontograma (
  id          NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  paciente_id NUMBER(19) NOT NULL,
  fecha       TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  pieza       VARCHAR2(10) NOT NULL,
  cara        VARCHAR2(10),
  hallazgo    VARCHAR2(120),
  detalle     VARCHAR2(255),
  CONSTRAINT fk_odon_paciente FOREIGN KEY (paciente_id) REFERENCES pacientes(id)
);

CREATE INDEX ix_odon_paciente ON odontograma (paciente_id, fecha);

CREATE TABLE recetas (
  id          NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  consulta_id NUMBER(19) NOT NULL,
  farmaco     VARCHAR2(160) NOT NULL,
  dosis       VARCHAR2(80)  NOT NULL,
  frecuencia  VARCHAR2(80)  NOT NULL,
  dias        NUMBER(10)    NOT NULL,
  indicaciones CLOB,
  firma       VARCHAR2(160),
  fecha       TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT fk_receta_consulta FOREIGN KEY (consulta_id) REFERENCES consultas(id)
);

-- === Inventario y compras ===
CREATE TABLE productos (
  id         NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre     VARCHAR2(160) NOT NULL,
  tipo       VARCHAR2(80),
  unidad     VARCHAR2(20) NOT NULL,
  stock_min  NUMBER(12,3) DEFAULT 0,
  activo     NUMBER(1) DEFAULT 1 NOT NULL,
  CONSTRAINT ck_productos_activo CHECK (activo IN (0,1))
);

CREATE TABLE lotes (
  id          NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  producto_id NUMBER(19) NOT NULL,
  lote        VARCHAR2(60),
  vence       DATE,
  costo       NUMBER(12,2) DEFAULT 0,
  CONSTRAINT fk_lote_prod FOREIGN KEY (producto_id) REFERENCES productos(id)
);

CREATE TABLE mov_inv (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  lote_id      NUMBER(19) NOT NULL,
  tipo         VARCHAR2(10) NOT NULL,
  cantidad     NUMBER(12,3) NOT NULL,
  motivo       VARCHAR2(160),
  consulta_id  NUMBER(19),
  proveedor_id NUMBER(19),
  fecha        TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT ck_mov_tipo CHECK (tipo IN ('INGRESO','EGRESO','AJUSTE')),
  CONSTRAINT fk_mov_lote     FOREIGN KEY (lote_id)     REFERENCES lotes(id),
  CONSTRAINT fk_mov_consulta FOREIGN KEY (consulta_id) REFERENCES consultas(id)
  -- proveedor_id referencia proveedores, se agrega tras crear proveedores
);

CREATE TABLE proveedores (
  id       NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre   VARCHAR2(160) NOT NULL,
  contacto VARCHAR2(160),
  telefono VARCHAR2(40),
  email    VARCHAR2(160)
);

-- Completar FK pendiente de mov_inv.proveedor_id
ALTER TABLE mov_inv
  ADD CONSTRAINT fk_mov_proveedor FOREIGN KEY (proveedor_id) REFERENCES proveedores(id);

CREATE TABLE compras (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  proveedor_id NUMBER(19) NOT NULL,
  fecha        TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  numero_doc   VARCHAR2(60),
  total        NUMBER(12,2) DEFAULT 0,
  CONSTRAINT fk_compra_prov FOREIGN KEY (proveedor_id) REFERENCES proveedores(id)
);

CREATE TABLE compra_items (
  id         NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  compra_id  NUMBER(19) NOT NULL,
  lote_id    NUMBER(19) NOT NULL,
  cantidad   NUMBER(12,3) NOT NULL,
  precio_unit NUMBER(12,2) NOT NULL,
  CONSTRAINT fk_citem_compra FOREIGN KEY (compra_id) REFERENCES compras(id),
  CONSTRAINT fk_citem_lote   FOREIGN KEY (lote_id)   REFERENCES lotes(id)
);

-- === Facturación, pagos y caja ===
CREATE TABLE facturas (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  paciente_id  NUMBER(19) NOT NULL,
  consulta_id  NUMBER(19),
  fecha        TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  total        NUMBER(12,2) DEFAULT 0 NOT NULL,
  iva          NUMBER(12,2) DEFAULT 0 NOT NULL,
  estado       VARCHAR2(10) DEFAULT 'PENDIENTE' NOT NULL,
  CONSTRAINT ck_fact_estado CHECK (estado IN ('PENDIENTE','PAGADA','ANULADA')),
  CONSTRAINT fk_fact_paciente FOREIGN KEY (paciente_id) REFERENCES pacientes(id),
  CONSTRAINT fk_fact_consulta FOREIGN KEY (consulta_id) REFERENCES consultas(id)
);

CREATE TABLE factura_items (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  factura_id   NUMBER(19) NOT NULL,
  servicio_id  NUMBER(19) NOT NULL,
  descripcion  VARCHAR2(200),
  cantidad     NUMBER(10,2) DEFAULT 1 NOT NULL,
  precio_unit  NUMBER(12,2) NOT NULL,
  CONSTRAINT fk_fitem_fact FOREIGN KEY (factura_id) REFERENCES facturas(id),
  CONSTRAINT fk_fitem_serv FOREIGN KEY (servicio_id) REFERENCES servicios(id)
);

CREATE TABLE cajas (
  id           NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id   NUMBER(19) NOT NULL,
  sucursal_id  NUMBER(19) NOT NULL,
  apertura     TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  cierre       TIMESTAMP,
  monto_inicial NUMBER(12,2) DEFAULT 0 NOT NULL,
  CONSTRAINT fk_caja_usuario  FOREIGN KEY (usuario_id)  REFERENCES usuarios(id),
  CONSTRAINT fk_caja_sucursal FOREIGN KEY (sucursal_id) REFERENCES sucursales(id)
);

CREATE TABLE pagos (
  id          NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  factura_id  NUMBER(19) NOT NULL,
  caja_id     NUMBER(19) NOT NULL,
  metodo      VARCHAR2(14) NOT NULL,
  monto       NUMBER(12,2) NOT NULL,
  referencia  VARCHAR2(120),
  fecha       TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT ck_pagos_metodo CHECK (metodo IN ('EFECTIVO','TARJETA','TRANSFERENCIA','QR','OTRO')),
  CONSTRAINT fk_pago_fact FOREIGN KEY (factura_id) REFERENCES facturas(id),
  CONSTRAINT fk_pago_caja FOREIGN KEY (caja_id) REFERENCES cajas(id)
);

-- === Aseguradoras / convenios ===
CREATE TABLE aseguradoras (
  id       NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre   VARCHAR2(160) NOT NULL,
  contacto VARCHAR2(160),
  CONSTRAINT uq_aseguradoras_nombre UNIQUE (nombre)
);

CREATE TABLE convenios (
  id             NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  aseguradora_id NUMBER(19) NOT NULL,
  servicio_id    NUMBER(19) NOT NULL,
  tarifa         NUMBER(12,2) NOT NULL,
  CONSTRAINT uq_convenios UNIQUE (aseguradora_id, servicio_id),
  CONSTRAINT fk_conv_aseg FOREIGN KEY (aseguradora_id) REFERENCES aseguradoras(id),
  CONSTRAINT fk_conv_serv FOREIGN KEY (servicio_id)    REFERENCES servicios(id)
);

-- === Índices útiles adicionales (ya agregados arriba algunos) ===
CREATE INDEX ix_pagos_factura       ON pagos (factura_id, fecha);
CREATE INDEX ix_movinv_lote_fecha   ON mov_inv (lote_id, fecha);


SET DEFINE OFF;

-- === ROLES ===
INSERT INTO roles (id,nombre,descripcion) VALUES (1,'Administrador','Acceso total');
INSERT INTO roles (id,nombre,descripcion) VALUES (2,'Dentista','Atiende pacientes');
INSERT INTO roles (id,nombre,descripcion) VALUES (3,'Asistente','Apoyo clínico');

-- === SUCURSALES ===
INSERT INTO sucursales (id,nombre,direccion,telefono,activo)
VALUES (1,'Sucursal Central','Av. Reforma 123','5555-1000',1);
INSERT INTO sucursales VALUES (2,'Sucursal Norte','Blvd. Vista 456','5555-2000',1);

-- === USUARIOS ===
INSERT INTO usuarios (id,rol_id,nombre,email,colegiado,especialidad,hash_password,activo)
VALUES (1,1,'Admin Sistema','admin@clinica.com','','','$2a$10$hashadmin',1);
INSERT INTO usuarios VALUES (2,2,'Dra. Ana Gómez','ana@clinica.com','COL-1234','Odontología General','$2a$10$hashana',1);
INSERT INTO usuarios VALUES (3,2,'Dr. Luis Pérez','luis@clinica.com','COL-5678','Endodoncia','$2a$10$hashluis',1);

-- === PACIENTES ===
INSERT INTO pacientes (id,historia,nombres,apellidos,fecha_nacimiento,sexo,dpi_nit,telefono,email,contacto_emergencia,alergias,antecedentes,medicamentos,fecha_registro)
VALUES (1,'H001','María','López',TO_DATE('1990-05-12','YYYY-MM-DD'),'F','12345678','5555-3001','maria@example.com','Carlos López','Penicilina','Asma controlada','Ibuprofeno',TO_TIMESTAMP('2025-09-01 09:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO pacientes VALUES (2,'H002','José','Martínez',TO_DATE('1985-11-02','YYYY-MM-DD'),'M','87654321','5555-3002','jose@example.com','Ana Martínez',NULL,NULL,NULL,TO_TIMESTAMP('2025-09-02 10:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO pacientes VALUES (3,'H003','Lucía','Ramírez',TO_DATE('2000-01-22','YYYY-MM-DD'),'F','11223344','5555-3003','lucia@example.com','Marta Ramírez','Latex',NULL,'Paracetamol',TO_TIMESTAMP('2025-09-03 11:00:00','YYYY-MM-DD HH24:MI:SS'));

-- === SERVICIOS ===
INSERT INTO servicios (id,codigo,nombre,duracion_min,precio,activo)
VALUES (1,'CONS','Consulta',30,200.00,1);
INSERT INTO servicios VALUES (2,'LIMP','Limpieza',45,350.00,1);
INSERT INTO servicios VALUES (3,'END1','Endodoncia Unicanal',90,2500.00,1);
INSERT INTO servicios VALUES (4,'RX','Radiografía',10,80.00,1);

-- === PRODUCTOS ===
INSERT INTO productos (id,nombre,tipo,unidad,stock_min,activo)
VALUES (1,'Anestésico Lidocaína','Medicamento','ml',50.000,1);
INSERT INTO productos VALUES (2,'Resina Fotocurable','Insumo','g',20.000,1);
INSERT INTO productos VALUES (3,'Guantes Nitrilo','Desechable','caja',10.000,1);

-- === ASEGURADORAS ===
INSERT INTO aseguradoras VALUES (1,'AseguraSalud','Juan Rivas');
INSERT INTO aseguradoras VALUES (2,'DentalCare Plus','María Díaz');

-- === PROVEEDORES ===
INSERT INTO proveedores VALUES (1,'Distribuidora Dental SA','Pedro Ruiz','5555-6001','ventas@ddsa.com');
INSERT INTO proveedores VALUES (2,'Insumos Médicos GT','Laura Méndez','5555-6002','lmendez@insumosgt.com');

-- === BOXES ===
INSERT INTO boxes VALUES (1,1,'Box 1',1);
INSERT INTO boxes VALUES (2,1,'Box 2',1);
INSERT INTO boxes VALUES (3,2,'Box 3',1);

-- === CITAS ===
INSERT INTO citas (id,paciente_id,profesional_id,servicio_id,box_id,fecha_hora,estado,origen,notas,created_at)
VALUES (1,1,2,1,1,TO_TIMESTAMP('2025-09-05 09:30:00','YYYY-MM-DD HH24:MI:SS'),'CONFIRMADA','TEL','Primera consulta',TO_TIMESTAMP('2025-09-01 08:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO citas VALUES (2,2,3,2,2,TO_TIMESTAMP('2025-09-05 10:30:00','YYYY-MM-DD HH24:MI:SS'),'PROGRAMADA','WEB','Limpieza semestral',TO_TIMESTAMP('2025-09-02 08:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO citas VALUES (3,3,2,4,1,TO_TIMESTAMP('2025-09-06 14:00:00','YYYY-MM-DD HH24:MI:SS'),'PROGRAMADA','WHATSAPP','Radiografía molar',TO_TIMESTAMP('2025-09-03 08:30:00','YYYY-MM-DD HH24:MI:SS'));

-- === CONSULTAS ===
INSERT INTO consultas VALUES (1,1,1,2,'Dolor leve','Se indica RX',TO_TIMESTAMP('2025-09-05 09:35:00','YYYY-MM-DD HH24:MI:SS'),TO_TIMESTAMP('2025-09-05 10:00:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO consultas VALUES (2,2,2,3,'Profilaxis','Profilaxis completa',TO_TIMESTAMP('2025-09-05 10:35:00','YYYY-MM-DD HH24:MI:SS'),TO_TIMESTAMP('2025-09-05 11:20:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO consultas VALUES (3,NULL,3,2,'Valoración RX','Revisar pieza 36',TO_TIMESTAMP('2025-09-06 14:05:00','YYYY-MM-DD HH24:MI:SS'),NULL);

-- === DOCUMENTOS ===
INSERT INTO documentos VALUES (1,1,1,'RX','maria_rx_20250905.png','image/png','https://files/rx1',TO_TIMESTAMP('2025-09-05 09:40:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO documentos VALUES (2,3,3,'RX','lucia_rx_20250906.png','image/png','https://files/rx2',TO_TIMESTAMP('2025-09-06 14:10:00','YYYY-MM-DD HH24:MI:SS'));

-- === PROCEDIMIENTOS ===
INSERT INTO procedimientos VALUES (1,1,4,'36',NULL,10,80.00);
INSERT INTO procedimientos VALUES (2,1,1,NULL,NULL,30,200.00);
INSERT INTO procedimientos VALUES (3,2,2,NULL,NULL,45,350.00);
INSERT INTO procedimientos VALUES (4,3,3,'36','O',90,2500.00);

-- === ODONTOGRAMA ===
INSERT INTO odontograma VALUES (1,1,TO_TIMESTAMP('2025-09-05 09:50:00','YYYY-MM-DD HH24:MI:SS'),'36','O','Caries inicial','Requiere atención');
INSERT INTO odontograma VALUES (2,2,TO_TIMESTAMP('2025-09-05 10:45:00','YYYY-MM-DD HH24:MI:SS'),'11',NULL,'Sarro',NULL);
INSERT INTO odontograma VALUES (3,3,TO_TIMESTAMP('2025-09-06 14:15:00','YYYY-MM-DD HH24:MI:SS'),'36',NULL,'Endodoncia previa',NULL);

-- === RECETAS ===
INSERT INTO recetas VALUES (1,1,'Ibuprofeno 400mg','1 tableta','cada 8 horas',3,'Tomar con alimentos','Dra. Ana',TO_TIMESTAMP('2025-09-05 09:55:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO recetas VALUES (2,2,'Clorhexidina 0.12%','Enjuague','2 veces al día',7,'No ingerir','Dr. Luis',TO_TIMESTAMP('2025-09-05 11:15:00','YYYY-MM-DD HH24:MI:SS'));

-- === LOTES / COMPRAS / INVENTARIO ===
INSERT INTO lotes VALUES (1,1,'LID-2025-01',TO_DATE('2026-01-31','YYYY-MM-DD'),150.00);
INSERT INTO lotes VALUES (2,2,'RES-2025-07',TO_DATE('2027-07-31','YYYY-MM-DD'),300.00);
INSERT INTO lotes VALUES (3,3,'GUA-2025-02',TO_DATE('2026-12-31','YYYY-MM-DD'),120.00);

INSERT INTO compras VALUES (1,1,TO_TIMESTAMP('2025-09-01 12:00:00','YYYY-MM-DD HH24:MI:SS'),'FAC-1001',570.00);
INSERT INTO compras VALUES (2,2,TO_TIMESTAMP('2025-09-03 15:00:00','YYYY-MM-DD HH24:MI:SS'),'FAC-2001',240.00);

INSERT INTO compra_items VALUES (1,1,1,10.000,150.00);
INSERT INTO compra_items VALUES (2,1,3,5.000,120.00);
INSERT INTO compra_items VALUES (3,2,2,8.000,300.00);

INSERT INTO mov_inv VALUES (1,1,'INGRESO',10.000,'Compra lote LID-2025-01',NULL,1,TO_TIMESTAMP('2025-09-01 12:10:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO mov_inv VALUES (2,3,'INGRESO',5.000,'Compra lote GUA-2025-02',NULL,1,TO_TIMESTAMP('2025-09-01 12:10:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO mov_inv VALUES (3,2,'EGRESO',1.000,'Uso en consulta 2',2,NULL,TO_TIMESTAMP('2025-09-05 11:00:00','YYYY-MM-DD HH24:MI:SS'));

-- === FACTURAS / ITEMS / CAJA / PAGOS ===
INSERT INTO facturas VALUES (1,1,1,TO_TIMESTAMP('2025-09-05 10:00:00','YYYY-MM-DD HH24:MI:SS'),280.00,33.60,'PAGADA');
INSERT INTO facturas VALUES (2,2,2,TO_TIMESTAMP('2025-09-05 11:20:00','YYYY-MM-DD HH24:MI:SS'),350.00,42.00,'PENDIENTE');
INSERT INTO facturas VALUES (3,3,NULL,TO_TIMESTAMP('2025-09-06 14:20:00','YYYY-MM-DD HH24:MI:SS'),80.00,9.60,'PENDIENTE');

INSERT INTO factura_items VALUES (1,1,4,'Radiografía pieza 36',1.00,80.00);
INSERT INTO factura_items VALUES (2,1,1,'Consulta',1.00,200.00);
INSERT INTO factura_items VALUES (3,2,2,'Limpieza',1.00,350.00);
INSERT INTO factura_items VALUES (4,3,4,'Radiografía',1.00,80.00);
INSERT INTO factura_items VALUES (5,3,1,'Consulta',1.00,200.00);

INSERT INTO cajas VALUES (1,1,1,TO_TIMESTAMP('2025-09-05 08:00:00','YYYY-MM-DD HH24:MI:SS'),NULL,500.00);

INSERT INTO pagos VALUES (1,1,1,'EFECTIVO',313.60,'Caja 1',TO_TIMESTAMP('2025-09-05 10:05:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO pagos VALUES (2,1,1,'TARJETA',0.00,'',TO_TIMESTAMP('2025-09-05 10:05:10','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO pagos VALUES (3,3,1,'EFECTIVO',89.60,'',TO_TIMESTAMP('2025-09-06 14:25:00','YYYY-MM-DD HH24:MI:SS'));

-- === CONVENIOS / CONSENTIMIENTOS ===
INSERT INTO convenios VALUES (1,1,1,150.00);
INSERT INTO convenios VALUES (2,1,2,280.00);
INSERT INTO convenios VALUES (3,2,3,1800.00);

INSERT INTO consentimientos VALUES (1,1,'Consentimiento Informado','El paciente autoriza procedimiento.','María López',TO_TIMESTAMP('2025-09-05 09:20:00','YYYY-MM-DD HH24:MI:SS'));
INSERT INTO consentimientos VALUES (2,2,'Tratamiento de Datos','El paciente autoriza uso de datos.','José Martínez',TO_TIMESTAMP('2025-09-05 10:20:00','YYYY-MM-DD HH24:MI:SS'));

COMMIT;
